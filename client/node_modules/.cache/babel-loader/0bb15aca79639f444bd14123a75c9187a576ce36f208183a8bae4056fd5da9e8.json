{"ast":null,"code":"// Update API endpoint to match server port in docker-compose.yml and index.js\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:4000/api\";\n\n// Add error handling to fetch requests\nexport async function getProducts() {\n  try {\n    const res = await fetch(`${API_URL}/products`);\n    if (!res.ok) {\n      throw new Error(`Error fetching products: ${res.statusText}`);\n    }\n    return res.json();\n  } catch (error) {\n    console.error(\"Error fetching products:\", error);\n    return []; // Return empty array to prevent app crashing\n  }\n}\nexport async function addProduct(product) {\n  try {\n    const res = await fetch(`${API_URL}/products`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(product)\n    });\n    if (!res.ok) {\n      throw new Error(`Error adding product: ${res.statusText}`);\n    }\n    return res.json();\n  } catch (error) {\n    console.error(\"Error adding product:\", error);\n    throw error; // Re-throw for handling in component\n  }\n}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getProducts","res","fetch","ok","Error","statusText","json","error","console","addProduct","product","method","headers","body","JSON","stringify"],"sources":["C:/Users/PMLS/Desktop/Pharmacy Management/pharmacy-management/client/src/services/api.js"],"sourcesContent":["// Update API endpoint to match server port in docker-compose.yml and index.js\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:4000/api\";\r\n\r\n// Add error handling to fetch requests\r\nexport async function getProducts() {\r\n  try {\r\n    const res = await fetch(`${API_URL}/products`);\r\n    if (!res.ok) {\r\n      throw new Error(`Error fetching products: ${res.statusText}`);\r\n    }\r\n    return res.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching products:\", error);\r\n    return []; // Return empty array to prevent app crashing\r\n  }\r\n}\r\n\r\nexport async function addProduct(product) {\r\n  try {\r\n    const res = await fetch(`${API_URL}/products`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(product),\r\n    });\r\n    if (!res.ok) {\r\n      throw new Error(`Error adding product: ${res.statusText}`);\r\n    }\r\n    return res.json();\r\n  } catch (error) {\r\n    console.error(\"Error adding product:\", error);\r\n    throw error; // Re-throw for handling in component\r\n  }\r\n}"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,WAAW,CAAC;IAC9C,IAAI,CAACK,GAAG,CAACE,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,4BAA4BH,GAAG,CAACI,UAAU,EAAE,CAAC;IAC/D;IACA,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE,CAAC,CAAC;EACb;AACF;AAEA,OAAO,eAAeE,UAAUA,CAACC,OAAO,EAAE;EACxC,IAAI;IACF,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,WAAW,EAAE;MAC7Ce,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IACF,IAAI,CAACT,GAAG,CAACE,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,yBAAyBH,GAAG,CAACI,UAAU,EAAE,CAAC;IAC5D;IACA,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}