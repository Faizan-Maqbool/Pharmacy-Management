{"ast":null,"code":"// Update API endpoint to match server port in docker-compose.yml and index.js\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001/api\";\n\n// Add error handling to fetch requests\nexport async function getProducts() {\n  try {\n    console.log(\"Fetching from:\", `${API_URL}/products`);\n    const res = await fetch(`${API_URL}/products`);\n    console.log(\"Response status:\", res.status);\n    if (!res.ok) {\n      console.error(\"Failed response:\", res.statusText);\n      throw new Error(`Error fetching products: ${res.statusText}`);\n    }\n    const data = await res.json();\n    console.log(\"Received data:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching products:\", error);\n    return []; // Return empty array to prevent app crashing\n  }\n}\nexport async function addProduct(product) {\n  try {\n    const res = await fetch(`${API_URL}/products`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(product)\n    });\n    if (!res.ok) {\n      throw new Error(`Error adding product: ${res.statusText}`);\n    }\n    return res.json();\n  } catch (error) {\n    console.error(\"Error adding product:\", error);\n    throw error; // Re-throw for handling in component\n  }\n}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getProducts","console","log","res","fetch","status","ok","error","statusText","Error","data","json","addProduct","product","method","headers","body","JSON","stringify"],"sources":["C:/Users/PMLS/Desktop/Pharmacy Management/pharmacy-management/client/src/services/api.js"],"sourcesContent":["// Update API endpoint to match server port in docker-compose.yml and index.js\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001/api\";\r\n\r\n// Add error handling to fetch requests\r\nexport async function getProducts() {\r\n  try {\r\n    console.log(\"Fetching from:\", `${API_URL}/products`);\r\n    const res = await fetch(`${API_URL}/products`);\r\n    \r\n    console.log(\"Response status:\", res.status);\r\n    \r\n    if (!res.ok) {\r\n      console.error(\"Failed response:\", res.statusText);\r\n      throw new Error(`Error fetching products: ${res.statusText}`);\r\n    }\r\n    \r\n    const data = await res.json();\r\n    console.log(\"Received data:\", data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching products:\", error);\r\n    return []; // Return empty array to prevent app crashing\r\n  }\r\n}\r\n\r\nexport async function addProduct(product) {\r\n  try {\r\n    const res = await fetch(`${API_URL}/products`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(product),\r\n    });\r\n    if (!res.ok) {\r\n      throw new Error(`Error adding product: ${res.statusText}`);\r\n    }\r\n    return res.json();\r\n  } catch (error) {\r\n    console.error(\"Error adding product:\", error);\r\n    throw error; // Re-throw for handling in component\r\n  }\r\n}"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,GAAGN,OAAO,WAAW,CAAC;IACpD,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,WAAW,CAAC;IAE9CK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,GAAG,CAACE,MAAM,CAAC;IAE3C,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE;MACXL,OAAO,CAACM,KAAK,CAAC,kBAAkB,EAAEJ,GAAG,CAACK,UAAU,CAAC;MACjD,MAAM,IAAIC,KAAK,CAAC,4BAA4BN,GAAG,CAACK,UAAU,EAAE,CAAC;IAC/D;IAEA,MAAME,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7BV,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEQ,IAAI,CAAC;IACnC,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE,CAAC,CAAC;EACb;AACF;AAEA,OAAO,eAAeK,UAAUA,CAACC,OAAO,EAAE;EACxC,IAAI;IACF,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,WAAW,EAAE;MAC7CkB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IACF,IAAI,CAACV,GAAG,CAACG,EAAE,EAAE;MACX,MAAM,IAAIG,KAAK,CAAC,yBAAyBN,GAAG,CAACK,UAAU,EAAE,CAAC;IAC5D;IACA,OAAOL,GAAG,CAACQ,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}