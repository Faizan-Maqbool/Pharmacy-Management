{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PMLS\\\\Desktop\\\\Pharmacy Management\\\\pharmacy-management\\\\client\\\\src\\\\TestConnection.jsx\",\n  _s = $RefreshSig$();\n// Add this file to debug API connection issues\n\nimport React, { useState, useEffect } from \"react\";\nimport { getProducts } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestConnection() {\n  _s();\n  const [status, setStatus] = useState(\"Checking connection...\");\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const testConnection = async () => {\n      try {\n        // Direct fetch to API root to test connection\n        const rootResponse = await fetch(\"http://localhost:5001/\");\n        if (rootResponse.ok) {\n          setStatus(`Server connection test: OK (${rootResponse.status})`);\n        } else {\n          setStatus(`Server connection test: Failed (${rootResponse.status})`);\n        }\n\n        // Test products endpoint\n        try {\n          console.log(\"Fetching products...\");\n          const productsData = await getProducts();\n          console.log(\"Products response:\", productsData);\n          if (Array.isArray(productsData)) {\n            setProducts(productsData);\n            setStatus(prev => `${prev}\\nProducts endpoint: OK (${productsData.length} products)`);\n          } else {\n            setStatus(prev => `${prev}\\nProducts endpoint: Returns non-array: ${JSON.stringify(productsData).substring(0, 100)}`);\n          }\n        } catch (productsError) {\n          console.error(\"Error testing products endpoint:\", productsError);\n          setStatus(prev => `${prev}\\nProducts endpoint error: ${productsError.message}`);\n        }\n      } catch (e) {\n        console.error(\"Connection test error:\", e);\n        setError(e.message);\n        setStatus(`Connection failed: ${e.message}`);\n      }\n    };\n    testConnection();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'monospace'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"API Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        whiteSpace: 'pre-wrap',\n        background: '#eee',\n        padding: '10px'\n      },\n      children: [status, error && `\\n\\nError: ${error}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Products Data:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - \", product.price, \" (Stock: \", product.stock, \")\"]\n      }, product._id || index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No products found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Browser Console\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please open your browser console (F12) to see detailed request/response logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(TestConnection, \"GcZiCHokLeVE40ObsVaC5yStKaE=\");\n_c = TestConnection;\nexport default TestConnection;\nvar _c;\n$RefreshReg$(_c, \"TestConnection\");","map":{"version":3,"names":["React","useState","useEffect","getProducts","jsxDEV","_jsxDEV","TestConnection","_s","status","setStatus","products","setProducts","error","setError","testConnection","rootResponse","fetch","ok","console","log","productsData","Array","isArray","prev","length","JSON","stringify","substring","productsError","message","e","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","whiteSpace","background","map","product","index","name","price","stock","_id","_c","$RefreshReg$"],"sources":["C:/Users/PMLS/Desktop/Pharmacy Management/pharmacy-management/client/src/TestConnection.jsx"],"sourcesContent":["// Add this file to debug API connection issues\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getProducts } from \"./services/api\";\r\n\r\nfunction TestConnection() {\r\n  const [status, setStatus] = useState(\"Checking connection...\");\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const testConnection = async () => {\r\n      try {\r\n        // Direct fetch to API root to test connection\r\n        const rootResponse = await fetch(\"http://localhost:5001/\");\r\n        if (rootResponse.ok) {\r\n          setStatus(`Server connection test: OK (${rootResponse.status})`);\r\n        } else {\r\n          setStatus(`Server connection test: Failed (${rootResponse.status})`);\r\n        }\r\n        \r\n        // Test products endpoint\r\n        try {\r\n          console.log(\"Fetching products...\");\r\n          const productsData = await getProducts();\r\n          console.log(\"Products response:\", productsData);\r\n          \r\n          if (Array.isArray(productsData)) {\r\n            setProducts(productsData);\r\n            setStatus(prev => `${prev}\\nProducts endpoint: OK (${productsData.length} products)`);\r\n          } else {\r\n            setStatus(prev => `${prev}\\nProducts endpoint: Returns non-array: ${JSON.stringify(productsData).substring(0, 100)}`);\r\n          }\r\n        } catch (productsError) {\r\n          console.error(\"Error testing products endpoint:\", productsError);\r\n          setStatus(prev => `${prev}\\nProducts endpoint error: ${productsError.message}`);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Connection test error:\", e);\r\n        setError(e.message);\r\n        setStatus(`Connection failed: ${e.message}`);\r\n      }\r\n    };\r\n    \r\n    testConnection();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'monospace' }}>\r\n      <h2>API Connection Test</h2>\r\n      <pre style={{ whiteSpace: 'pre-wrap', background: '#eee', padding: '10px' }}>\r\n        {status}\r\n        {error && `\\n\\nError: ${error}`}\r\n      </pre>\r\n      \r\n      <h3>Products Data:</h3>\r\n      {products.length > 0 ? (\r\n        <ul>\r\n          {products.map((product, index) => (\r\n            <li key={product._id || index}>\r\n              {product.name} - {product.price} (Stock: {product.stock})\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No products found</p>\r\n      )}\r\n      \r\n      <h3>Browser Console</h3>\r\n      <p>Please open your browser console (F12) to see detailed request/response logs</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestConnection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}